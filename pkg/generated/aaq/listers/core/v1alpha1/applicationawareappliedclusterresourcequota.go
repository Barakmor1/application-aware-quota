/*
Copyright 2023 The AAQ Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubevirt.io/application-aware-quota/staging/src/kubevirt.io/application-aware-quota-api/pkg/apis/core/v1alpha1"
)

// ApplicationAwareAppliedClusterResourceQuotaLister helps list ApplicationAwareAppliedClusterResourceQuotas.
// All objects returned here must be treated as read-only.
type ApplicationAwareAppliedClusterResourceQuotaLister interface {
	// List lists all ApplicationAwareAppliedClusterResourceQuotas in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ApplicationAwareAppliedClusterResourceQuota, err error)
	// ApplicationAwareAppliedClusterResourceQuotas returns an object that can list and get ApplicationAwareAppliedClusterResourceQuotas.
	ApplicationAwareAppliedClusterResourceQuotas(namespace string) ApplicationAwareAppliedClusterResourceQuotaNamespaceLister
	ApplicationAwareAppliedClusterResourceQuotaListerExpansion
}

// applicationAwareAppliedClusterResourceQuotaLister implements the ApplicationAwareAppliedClusterResourceQuotaLister interface.
type applicationAwareAppliedClusterResourceQuotaLister struct {
	indexer cache.Indexer
}

// NewApplicationAwareAppliedClusterResourceQuotaLister returns a new ApplicationAwareAppliedClusterResourceQuotaLister.
func NewApplicationAwareAppliedClusterResourceQuotaLister(indexer cache.Indexer) ApplicationAwareAppliedClusterResourceQuotaLister {
	return &applicationAwareAppliedClusterResourceQuotaLister{indexer: indexer}
}

// List lists all ApplicationAwareAppliedClusterResourceQuotas in the indexer.
func (s *applicationAwareAppliedClusterResourceQuotaLister) List(selector labels.Selector) (ret []*v1alpha1.ApplicationAwareAppliedClusterResourceQuota, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApplicationAwareAppliedClusterResourceQuota))
	})
	return ret, err
}

// ApplicationAwareAppliedClusterResourceQuotas returns an object that can list and get ApplicationAwareAppliedClusterResourceQuotas.
func (s *applicationAwareAppliedClusterResourceQuotaLister) ApplicationAwareAppliedClusterResourceQuotas(namespace string) ApplicationAwareAppliedClusterResourceQuotaNamespaceLister {
	return applicationAwareAppliedClusterResourceQuotaNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApplicationAwareAppliedClusterResourceQuotaNamespaceLister helps list and get ApplicationAwareAppliedClusterResourceQuotas.
// All objects returned here must be treated as read-only.
type ApplicationAwareAppliedClusterResourceQuotaNamespaceLister interface {
	// List lists all ApplicationAwareAppliedClusterResourceQuotas in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ApplicationAwareAppliedClusterResourceQuota, err error)
	// Get retrieves the ApplicationAwareAppliedClusterResourceQuota from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ApplicationAwareAppliedClusterResourceQuota, error)
	ApplicationAwareAppliedClusterResourceQuotaNamespaceListerExpansion
}

// applicationAwareAppliedClusterResourceQuotaNamespaceLister implements the ApplicationAwareAppliedClusterResourceQuotaNamespaceLister
// interface.
type applicationAwareAppliedClusterResourceQuotaNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApplicationAwareAppliedClusterResourceQuotas in the indexer for a given namespace.
func (s applicationAwareAppliedClusterResourceQuotaNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApplicationAwareAppliedClusterResourceQuota, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApplicationAwareAppliedClusterResourceQuota))
	})
	return ret, err
}

// Get retrieves the ApplicationAwareAppliedClusterResourceQuota from the indexer for a given namespace and name.
func (s applicationAwareAppliedClusterResourceQuotaNamespaceLister) Get(name string) (*v1alpha1.ApplicationAwareAppliedClusterResourceQuota, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("applicationawareappliedclusterresourcequota"), name)
	}
	return obj.(*v1alpha1.ApplicationAwareAppliedClusterResourceQuota), nil
}
